spring:
  boot:
    admin:
      client:
        # SpringBoot Admin 服务端地址
        url: http://127.0.0.1:27777
  redis:
    #数据库索引
    database: 0
    host: 127.0.0.1
    port: 6379
    password: password
    #连接超时时间
    timeout: 5000
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: 'http://localhost:8000/pisces-auth/publicKey/get' #配置RSA的公钥访问地址
  main:
    allow-bean-definition-overriding: true
  cloud:
    # Sentinel 配置项，对应 SentinelProperties 配置属性类
    sentinel:
      enabled: true # 是否开启。默认为 true 开启
      eager: true # 是否饥饿加载。默认为 false 关闭
      transport:
        dashboard: 127.0.0.1:7070 # Sentinel 控制台地址
        port: 8719
      # nacos配置持久化
      datasource:
        # 对应 DataSourcePropertiesConfiguration 类
        ds1:
          nacos:
            server-addr: 127.0.0.1:8848 # Nacos 服务器地址
            dataId: ${spring.application.name}-sentinel-flow-rule # Nacos 配置集编号
            groupId: DEFAULT_GROUP # Nacos 分组
            data-type: json # 数据格式
            rule-type: flow # 规则类型
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能
          lower-case-service-id: true #使用小写服务名，默认是大写
      routes:
        # 认证中心的路由
        # 路由 ID
        - id: pisces-auth
          # 请求地址
          uri: lb://pisces-auth
          # 断言（判断条件）
          predicates:
            - Path=/pisces-auth/**
          # 过滤器
          filters:
            # 去掉前缀
            - StripPrefix=1
            # 重写路径，也相当于去掉前缀了
            # - RewritePath=/pisces-auth/(?<segment>.*), /$\{segment}
        # 业务系统的路由
        # 路由 ID
        - id: pisces-admin
          # 请求地址
          uri: lb://pisces-admin
          # 断言（判断条件）
          predicates:
            - Path=/pisces-admin/**
          # 过滤器
          filters:
            # 去掉前缀
            - StripPrefix=1
            # 重写路径，也相当于去掉前缀了
            # - RewritePath=/pisces-admin/(?<segment>.*), /$\{segment}

# Actuator 配置
management:
  endpoints:
    web:
      exposure:
        # 监控项配置
        include: info, health
  endpoint:
    health:
      # 开启显示全部细节
      show-details: always
    shutdown:
      # 启用接口关闭 SpringBoot
      enabled: false

# 日志文件地址（提供给程序读取的地址，输出地址请在 log4j2.xml 配置）
logging:
  file:
    name: logs/${spring.application.name}/info.log