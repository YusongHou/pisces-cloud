<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.besscroft.pisces.admin.mapper.UserMapper">

    <resultMap id="userMap" type="com.besscroft.pisces.framework.common.entity.User">
        <result column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="avatar" property="avatar"/>
        <result column="email" property="email"/>
        <result column="name" property="name"/>
        <result column="real_name" property="realName"/>
        <result column="telephone" property="telephone"/>
        <result column="birthday" property="birthday"/>
        <result column="sex" property="sex"/>
        <result column="remark" property="remark"/>
        <result column="creator" property="creator"/>
        <result column="updater" property="updater"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="status" property="status"/>
        <result column="del" property="del"/>
    </resultMap>

    <sql id="userVo">
        id, username, password, avatar, email, name, real_name, telephone, birthday, sex, remark, creator, updater, create_time, update_time, status, del
    </sql>

    <select id="findByUsername" parameterType="String" resultMap="userMap">
        SELECT
            <include refid="userVo"/>
        FROM
            pisces_auth_user
        WHERE
            del = '1'
        AND
            username = #{username}
    </select>

    <select id="selectAllByQueryKey" resultSets="java.util.List" resultType="com.besscroft.pisces.admin.domain.dto.UserListDto">
        SELECT
            pau.id,
            pau.username,
            pau.avatar,
            pau.email,
            pau.name,
            pau.real_name,
            pau.telephone,
            pau.birthday,
            pau.sex,
            pau.remark,
            pau.creator,
            pau.updater,
            pau.create_time,
            pau.update_time,
            pau.status,
            pad.id AS departId,
            pad.name AS departName
        FROM
            pisces_auth_user pau
        LEFT JOIN
            pisces_auth_user_depart paud
        ON
            pau.id = paud.user_id
        LEFT JOIN
            pisces_auth_depart pad
        ON
            paud.depart_id = pad.id
        WHERE
            pau.del = '1'
        <if test="queryKey != null and queryKey != ''">
            AND (
                pau.username LIKE CONCAT('%', #{queryKey} ,'%')
                OR
                pau.name LIKE CONCAT('%', #{queryKey} ,'%')
            )
        </if>
        <if test="departId != null">
            AND pad.id = #{departId}
        </if>
        ORDER BY pau.id
    </select>

    <update id="updateStatusById">
        UPDATE
            pisces_auth_user
        SET
            status = #{status}
        WHERE
            id = #{userId}
    </update>

    <update id="updateByUserId">
        UPDATE
            pisces_auth_user
        SET
            <if test="user.avatar != null and user.avatar != ''">
                avatar = #{user.avatar},
            </if>
            <if test="user.email != null and user.email != ''">
                email = #{user.email},
            </if>
            <if test="user.name != null and user.name != ''">
                name = #{user.name},
            </if>
            <if test="user.realName != null and user.realName != ''">
                real_name = #{user.realName},
            </if>
            <if test="user.telephone != null and user.telephone != ''">
                telephone = #{user.telephone},
            </if>
            <if test="user.birthday != null">
                birthday = #{user.birthday},
            </if>
            <if test="user.sex != null and user.sex != ''">
                sex = #{user.sex},
            </if>
            <if test="user.remark != null and user.remark != ''">
                remark = #{user.remark},
            </if>
            <if test="user.status != null and user.status != ''">
                status = #{user.status},
            </if>
                updater = #{user.updater},
                update_time = #{user.updateTime}
        WHERE
            id = #{user.id}
    </update>

    <update id="updateDelById">
        UPDATE
            pisces_auth_user
        SET
            del = '0'
        WHERE
            id = #{userId}
    </update>

    <delete id="deleteUserRoleById">
        DELETE FROM pisces_auth_user_role
        WHERE user_id = #{userId}
    </delete>

    <insert id="insertUserRole">
        INSERT INTO
            pisces_auth_user_role(user_id, role_id)
        VALUES
        <foreach collection="roleIds" item="item" index="index" open="(" separator="," close=")">
            #{userId}, #{item}
        </foreach>
    </insert>

    <select id="selectExistDepartByUserId" resultType="java.lang.Integer">
        SELECT
            1
        FROM
            pisces_auth_user_depart
        WHERE
            user_id = #{userId}
    </select>

    <insert id="insertUserDepart">
        INSERT INTO pisces_auth_user_depart
            (user_id, depart_id)
        VALUES
            (#{userId}, #{departId})
    </insert>

    <update id="updateUserDepart">
        UPDATE
            pisces_auth_user_depart
        SET
            depart_id = #{departId}
        WHERE
            user_id = #{userId}
    </update>

    <update id="updatePasswordById">
        UPDATE
            pisces_auth_user
        SET
            password = #{newPassword}
        WHERE
            id = #{userId}
    </update>

</mapper>
