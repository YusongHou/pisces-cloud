<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.besscroft.pisces.admin.mapper.RoleMapper">

    <resultMap id="roleMap" type="com.besscroft.pisces.admin.entity.Role">
        <result column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="role_code" property="roleCode"/>
        <result column="description" property="description"/>
        <result column="sort" property="sort"/>
        <result column="creator" property="creator"/>
        <result column="updater" property="updater"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="status" property="status"/>
        <result column="del" property="del"/>
    </resultMap>

    <sql id="roleVo">
        id, role_name, role_code, description, sort, creator, updater, create_time, update_time, status, del
    </sql>

    <select id="findRoleResourceRelation" resultType="com.besscroft.pisces.admin.domain.dto.RoleResourceRelationDto">
        SELECT
            id,
            role_id AS roleId,
            resource_id AS resourceId
        FROM
            pisces_auth_role_resource
    </select>

    <select id="findAllByUserId" resultSets="java.util.List" resultMap="roleMap">
        SELECT
            par.id,
            par.role_name,
            par.role_code,
            par.description,
            par.sort,
            par.creator,
            par.updater,
            par.create_time,
            par.update_time,
            par.status,
            par.del
        FROM
            pisces_auth_role par
        INNER JOIN
            pisces_auth_user_role paur
        ON
            par.id = paur.role_id
        INNER JOIN
            pisces_auth_user pau
        ON
            paur.user_id = pau.id
        WHERE
            pau.del = '1'
        AND
            par.del = '1'
        AND
            par.status = '1'
        AND
            pau.id = #{userId}
    </select>

    <select id="selectAllByQueryKey" resultSets="java.util.List" resultMap="roleMap">
        SELECT
            <include refid="roleVo"/>
        FROM
            pisces_auth_role
        WHERE
            del = '1'
        <if test="queryKey != null and queryKey != ''">
            AND (
                role_name LIKE CONCAT('%', #{queryKey} ,'%')
                OR
                role_code LIKE CONCAT('%', #{queryKey} ,'%')
            )
        </if>
        ORDER BY id
    </select>

    <update id="updateStatusById">
        UPDATE
            pisces_auth_role
        SET
            status = #{status}
        WHERE
            id = #{roleId}
    </update>

    <delete id="deleteMenuByRoleId">
        DELETE
        FROM
            pisces_auth_role_menu
        WHERE
            role_id = #{roleId}
    </delete>

    <insert id="insertMenuByRoleId">
        INSERT INTO pisces_auth_role_menu
        (role_id, menu_id)
        VALUES
        <foreach collection="menuIds" item="id" separator=",">
            (
                #{roleId}, #{id}
            )
        </foreach>
    </insert>

    <delete id="deleteResourceByRoleId">
        DELETE
        FROM
            pisces_auth_role_resource
        WHERE
            role_id = #{roleId}
    </delete>

    <insert id="insertResourceByRoleId">
        INSERT INTO pisces_auth_role_resource
        (role_id, resource_id)
        VALUES
        <foreach collection="resourceIds" item="id" separator=",">
            (
            #{roleId}, #{id}
            )
        </foreach>
    </insert>

    <update id="updateDelById">
        UPDATE
            pisces_auth_role
        SET
            del = '0'
        WHERE
            id = #{roleId}
    </update>

</mapper>